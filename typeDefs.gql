type User {
  _id: ID!
  username: String! @unique
  email: String!
  password: String!
  avatar: String
  joinDate: String
  favorites: [Post]
}

type Post {
  _id: ID!
  title: String!
  imageUrl: String!
  description: String!
  categories: [String!]!
  createdDate: String
  likes: Int
  createdBy: User!
  message: [Message]
}

input PostInput {
  title: String!
  description: String!
  imageUrl: String!
  categories: [String!]!
  creatorId: String!
}

type Message {
  _id: ID
  messageBody: String!
  messageDate: String
  messageUser: User!
}

type AuthPayload {
  user: User!
  token: String!
}

type Query {
  getUser: User
  getUsers: [User]
  getPost: Post
  getPosts(options: String): [Post]
  getCurrentUser: User
}

type Mutation {
  signinUser(username: String!, password: String!): AuthPayload!
  signupUser(email: String!, username: String!, password: String!): AuthPayload!
  addPost(input: PostInput!): Post!
}
